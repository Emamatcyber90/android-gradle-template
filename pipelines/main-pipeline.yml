parameters:
  - name: 'modules'
    type: object
    default:
      - buildSrc
      - app
      - app-tests-on-device-server
      - core/todo-api
      - core/todo-api-mock
      - tools/coroutines-test
      - tools/wiremock-android
      - tools/wiremock-kotlindsl

schedules:
  - cron: "0 0 * * *"
    displayName: Daily Midnight Build
    branches:
      include:
        - master

jobs:
  - job:
    displayName: Check all modules are listed
    pool:
      vmImage: 'macOS-10.15'
    steps:
      - template: tasks/check-module-list.yml
        parameters:
          modules: ${{parameters.modules}}

  - job:
    displayName: Unit and Android test coverage
    pool:
      vmImage: 'macOS-10.15'
    steps:
      - template: templates/debug-build-and-test.yml
      - template: tasks/unit-tests.yml
        parameters:
          modules: ${{parameters.modules}}
      - task: Bash@3
        displayName: Wait for Emulator
        inputs:
          filePath: 'pipelines/templates/android-emulator-wait.sh'
        condition: succeededOrFailed()
      - template: tasks/instrumentation-tests.yml
        parameters:
          modules: ${{parameters.modules}}
      - template: tasks/publish-merged-coverage.yml
        parameters:
          modules: ${{parameters.modules}}
      - template: tasks/publish-reports.yml
        parameters:
          prefix: 'Test & Coverage Report '
          modules: ${{parameters.modules}}

  - job:
    displayName: Static code quality checks
    pool:
      vmImage: 'macOS-10.15'
    steps:
      - template: tasks/android-lint.yml
      - template: tasks/kotlin-ktlint.yml
      - template: tasks/publish-reports.yml
        parameters:
          prefix: 'Quality Report '
          modules: ${{parameters.modules}}

  - job:
    displayName: Project tasks output checks
    pool:
      vmImage: 'macOS-10.15'
    steps:
      - task: Bash@3
        displayName: Start Emulator
        inputs:
          filePath: 'pipelines/templates/android-emulator.sh'
        condition: succeededOrFailed()

      - task: Gradle@2
        displayName: Ktlint
        inputs:
          tasks: 'ktlint-check'
          gradleWrapperFile: 'gradlew'
          publishJUnitResults: false
        condition: succeededOrFailed()

      - task: Gradle@2
        displayName: Jacoco
        inputs:
          tasks: 'jacoco-check'
          gradleWrapperFile: 'gradlew'
          publishJUnitResults: false
        condition: succeededOrFailed()

      - task: Gradle@2
        displayName: Clean
        inputs:
          tasks: 'clean-check'
          gradleWrapperFile: 'gradlew'
          publishJUnitResults: false
        condition: succeededOrFailed()