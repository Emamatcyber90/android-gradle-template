buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // code generation support for android annotations
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'

        // code generation for json string - object mapping
        classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.14'
    }
}

plugins {
    // provide download task for gradle
    id "de.undercouch.download" version "1.2"
}

apply plugin: 'com.android.application'

// code generation support for android annotations
apply plugin: 'android-apt'

// code generation for json object mapping
apply from: 'build.generate-json-objects.gradle'

// code generation database files
apply from: 'build.generate-database.gradle'

// test support for android specific unit tests like database checks
apply from: 'build.robolectric.gradle'

// support code coverage for the unit tests
apply from: 'build.jacoco-test-report.gradle'

// replace target ip for REST calls to use local wiremock
apply from: "build.wiremock-replace-ip.gradle"

// makes adb wait as needed https://code.google.com/p/android/issues/detail?id=104305
com.android.ddmlib.DdmPreferences.setTimeOut(240000)

android {
    compileSdkVersion projectAndroidVersion
    buildToolsVersion projectAndroidBuildToolsVersion

    defaultConfig {
        applicationId "com.example.project"
        minSdkVersion projectAndroidMinVersion
        targetSdkVersion projectAndroidVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "MODULE_PATH", "\"$projectDir\"".replace('\\', '\\\\')
            // avoid warning for "Not all execution paths return a value"
            return true
        }
        debug {
            buildConfigField "String", "MODULE_PATH", "\"$projectDir\"".replace('\\', '\\\\')
            return true
        }
    }

    lintOptions {
        // GradleDependency Current we can't switch to support v23 tools because of robolectric
        disable 'GradleDependency'
    }

    dexOptions {
        if(isCi) {
            // CircleCi allow max 4G memory for all processes together and dex does exceed it
            // with his parallel execution. Shrink the javaMaxHeapSize does it only per dex process
            // but the combination exceed the max memory and to less value let it run for long time.
            // javaMaxHeapSize "1024M"

            // Speed up build for CI by ignoring extra build steps which should speed up build for developers.
            // Also reduce memory usage by avoiding multiple (pre) dex processes.
            incremental false
            preDexLibraries = false
        }
    }

    // instrumentation test module need to access the expected variant, default is only release publish
    publishNonDefault true

    packagingOptions {
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs.collect()[0].processResources.manifestFile
    }
}

repositories {
    jcenter()
}

dependencies {
    // ui design and backward compatibility
    compile "com.android.support:appcompat-v7:$projectAndroidSupportToolsVersion"
    compile "com.android.support:design:$projectAndroidSupportToolsVersion"

    // android annotations support
    apt "org.androidannotations:androidannotations:3.3.2"
    compile "org.androidannotations:androidannotations-api:3.3.2"

    // network support with android annotations
    compile "org.springframework.android:spring-android-rest-template:2.0.0.M3"

    // better time handling with DateTime
    compile 'net.danlew:android.joda:2.8.2'

    // java language tools like StringUtils
    compile 'org.apache.commons:commons-lang3:3.4'

    // Use CountIdlingResource class to avoid flaky espresso tests.
    // Interface is provided by own dependency but ready to use implementation comes with contrib library.
    // Looks like contrib library was only intended to be used within test scope.
    // Exclude transitiv dependencies to avoid conflicts with test support libraries.
    compile('com.android.support.test.espresso:espresso-idling-resource:2.2')
    compile('com.android.support.test.espresso:espresso-contrib:2.2') { exclude module: "*" }

    // force test dependencies to use the same support-annotations version
    testCompile "com.android.support:support-annotations:$projectAndroidSupportToolsVersion"

    // basic unit tests support + mocks + fluent assertions + android assertions
    testCompile 'junit:junit:4.12'
    testCompile 'com.squareup.assertj:assertj-android:1.1.0'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
}

