buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // code generation support for android annotations
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

apply plugin: 'com.android.application'

// code generation support for android annotations
apply plugin: 'android-apt'

// test support for android specific unit tests like database checks
apply from: 'build.robolectric.gradle'

// support code coverage for the unit tests
apply from: 'build.jacoco-test-report.gradle'

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        applicationId "com.example.app"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // GradleDependency Current we can't switch to support v23 tools because of robolectric
        disable 'GradleDependency'
    }

    dexOptions {
        // CircleCi allow max 4G memory for all processes together and dex does exceed it
        // with his parallel execution. Shrink the javaMaxHeapSize does it only per dex process
        // but the combination exceed the max memory and to less value let it run for long time.
        // javaMaxHeapSize "1024M"

        // Speed up build for CI by ignoring extra build steps which should speed up build for developers.
        // Also reduce memory usage by avoiding multiple (pre) dex processes.
        incremental !isCi
        preDexLibraries = !isCi
    }

    // instrumentation test module need to access the expected variant, default is only release publish
    publishNonDefault true

    packagingOptions {
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
    }
}

apt {
    arguments {
        androidManifestFile variant.outputs.collect()[0]?.processResources?.manifestFile
    }
}

repositories {
    maven { url = "https://dl.bintray.com/nenick/maven/" }
}

dependencies {
    // ui design and backward compatibility
    compile "com.android.support:appcompat-v7:23.3.0"
    compile "com.android.support:design:23.3.0"

    compile(project(':core')) {
        exclude module: "design"
    }

    // android annotations support
    apt "org.androidannotations:androidannotations:4.0.0"
    compile "org.androidannotations:androidannotations-api:4.0.0"

    // Use CountIdlingResource class to avoid flaky espresso tests
    compile('com.android.support.test.espresso:espresso-idling-resource:2.2.2')

    // basic unit tests support + mocks + fluent assertions + android assertions
    testCompile 'junit:junit:4.12'
    testCompile('com.squareup.assertj:assertj-android:1.1.0') {
        exclude module: 'support-annotations'
        // Avoid Error:Conflict ... Resolved versions for app (X) and test app (Y) differ ...
    }
    testCompile 'org.mockito:mockito-all:2.0.2-beta'

    androidTestCompile "com.android.support:appcompat-v7:23.3.0"
    androidTestCompile "com.android.support:design:23.3.0"
    androidTestCompile 'de.nenick:espresso-macchiato:0.4.0'
}

