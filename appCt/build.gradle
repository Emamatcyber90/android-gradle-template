buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        // support to get app module under test with robolectric in separated test module
        classpath "com.novoda:gradle-android-test-plugin:0.10.4"
    }
}

apply plugin: 'java'

// support code coverage for the component tests
// this must be before the plugin: 'android-test' declaration
apply plugin: "jacoco"

// support to get app module under test with robolectric in separated test module
apply plugin: 'android-test'

android {
    projectUnderTest ':app'
}

// support to get the separated test module work inside android studio
// this must be after the projectUnderTest declaration
apply from: 'build.novoda-android-studio.gradle'

// support code coverage for the component tests
// this must be after the projectUnderTest declaration
apply from: "build.jacoco-test-report.gradle"

// test support for android specific stuff like database and network
apply from: 'build.robolectric.gradle'

dependencies {

    // basic unit tests support + mocks + fluent assertions + android assertions
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile('com.squareup.assertj:assertj-android:1.1.0') {
        exclude module: "support-annotations"
    }

    // easy modify wiremock stubbing support
    // need standalone version to avoid conflicts with org.apache.http classes (not all tests will run anymore)
    testCompile ('com.github.tomakehurst:wiremock:1.42:standalone') { exclude module: "*" }
}


// force utf-8 is necessary for windows environments, without it test classes aren't interpreted in utf-8
tasks.withType(JavaCompile) {
    options.encoding = "utf-8"
}

// avoid release compile for tests for less build time
// avoid lint and tests in same process (TODO check if still necessary)
afterEvaluate {

    def isLintRun = false
    def isTestRun = false

    gradle.startParameter.taskNames.each {
        if (it.contains("lint")) {
            isLintRun = true
        }
        if (it.contains("test")) {
            isTestRun = true
        }
    }

    if (isLintRun && isTestRun) {
        println "WARNING: tests for release type are disabled for supporting jacoco"
        println "WARNING: run test and lint at same time is not supported"
        exit 1
    }

    if (isTestRun) {
        tasks.each {
            if (it.name.contains("Release")) {
                it.enabled = false
            }
        }
    }
}