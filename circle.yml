machine:
  java:
    # latest wiremock version needs java 8
    version: oraclejdk8
  environment:
    # auth for the coveralls report
    COVERALLS_REPO_TOKEN: mHJjy4h8zt9RIIBKg8sBosF5JkKsFk139

    # chooce network device for tests with wiremock support and emulator
    TEST_MOCK_IFACE: eth0

dependencies:
  pre:
    # workaround for "failed to find Build Tools revision ..."
    # android list sdk --all --extended
    # https://discuss.circleci.com/t/circleci-not-compiling-on-gradle-2-0-failed-to-resolve-support-annotations-23-3-0/3396
    - ( sleep 5 && while [ 1 ]; do sleep 1; echo y; done ) | android update sdk --no-ui --all --filter tools,platform-tools,android-23,extra-google-m2repository,extra-android-m2repository,extra-android-support
    - echo y | android update sdk --no-ui --all --filter build-tools-23.0.3

test:
  pre:
    # create android v23 emulator as latest supported android version with sdcard
    - echo no | android create avd -n my-android23 -t $(android list targets | grep android-23 | cut -d" " -f2) -c 512M

    # emulator startup need some minutes that's why start it before first build/test steps to speed up build
    - emulator -avd my-android23 -no-audio -no-window:
        background: true
        parallel: true

  override:
    # Build the code
    - ./gradlew app:assembleDebug

    # Execute Unit Tests
    - ./gradlew app:test

    # Check lint hints
    - ./gradlew app:lint

    # Build instrumented test code
    # fix apk not build https://code.google.com/p/android/issues/detail?id=180689
    - ./gradlew apptests:assembleDebug

    # ensure that the emulator is ready to use
    - circle-android wait-for-boot
    # the necessary sleep duration may change with time and depends on the pre tasks length.
    # When all pre tasks are run long enough then waiting will not be necessary anymore.
    # This sleep should avoid the com.android.builder.testing.api.DeviceException: com.android.ddmlib.ShellCommandUnresponsiveException
    - sleep 60
    # at least remove the look screen
    - adb shell input keyevent 82

    # later we collect the logs from test run
    - adb logcat -d

    # execute tests on emulator
    - ./gradlew app:connectedCheck
    - ./gradlew apptests:connectedCheck

    # Create coverage report
    - ./gradlew jacocoTestReport

    # copy test results
    - mv app/build/reports/tests/debug $CIRCLE_TEST_REPORTS/AppUnitTests
    - mv apptests/build/reports/androidTests/connected $CIRCLE_TEST_REPORTS/AndroidTests
    - mv build/reports/jacoco/test/html $CIRCLE_TEST_REPORTS/CodeCoverageReport

    # copy lint report
    - mkdir $CIRCLE_TEST_REPORTS/Lint
    - mkdir -p $CIRCLE_TEST_REPORTS/app/lint
    - cp -r app/build/outputs/lint* $CIRCLE_TEST_REPORTS/app/lint

    # circleCi proper test value feature
    - mkdir $CIRCLE_TEST_REPORTS/junit
    - find */build/test-results -name "*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
    - find */build/outputs/androidTest-results/ -name "*.xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;

    # collect logs from emulator
    - adb logcat -d > $CIRCLE_ARTIFACTS/logcat_emulator.txt

# Only executed if all tasks are successful
deployment:

  # report coverage to coveralls
  coverage:
    branch: [master, rewrite]
    commands:
    - ./gradlew coveralls
