apply plugin: 'com.android.test'

android {
    compileSdkVersion projectAndroidVersion
    buildToolsVersion projectAndroidBuildToolsVersion

    defaultConfig {
        // minimal should be same from app module
        minSdkVersion projectAndroidMinVersion
        testApplicationId 'com.example.project.test'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            // support code coverage for the integration tests
            testCoverageEnabled = true
        }
    }

    jacoco {
        //noinspection GroovyAssignabilityCheck
        version projectJacocoVersion
    }

    targetProjectPath ':app'
    targetVariant 'debug'
    
    dexOptions {
        if(isCi) {
            // CircleCi allow max 4G memory for all processes together and dex does exceed it
            // with his parallel execution. Shrink the javaMaxHeapSize does it only per dex process
            // but the combination exceed the max memory and to less value let it run for long time.
            // javaMaxHeapSize "1024M"

            // Speed up build for CI by ignoring extra build steps which should speed up build for developers.
            // Also reduce memory usage by avoiding multiple (pre) dex processes.
            incremental false
            preDexLibraries = false
        }
    }
}

dependencies {
    // force dependencies to use the same support-annotations version (must be same from app)
    compile "com.android.support:support-annotations:$projectAndroidSupportToolsVersion"

    // fluent assertion support and android specific assertions
    compile 'com.squareup.assertj:assertj-android:1.1.0'

    // espresso support
    compile 'com.android.support.test.espresso:espresso-core:2.2'
    compile 'com.android.support.test:runner:0.3'
}
